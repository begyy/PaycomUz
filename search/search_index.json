{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Kirish","text":"<pre><code>pip install PaycomUz\n\npip install django\n\npip install djangorestframework\n</code></pre>"},{"location":"check_order/","title":"Buyurtmani tekshirsh","text":"<p>Payme tamonidan bizga buyurtma (order) haqida ma'lumot kelganida, biz uni database orqali tekshirib, va uning natijasiga mos javob qaytarishimiz kerak bo'ladi. </p> <p>Batafsil: https://developer.help.paycom.uz/protokol-merchant-api/skhema-vzaimodeystviya</p>"},{"location":"check_order/#order-model","title":"Order model","text":"<p>Orderlarni saqlash uchun yangi model yaratib olamiz</p>"},{"location":"check_order/#modelspy","title":"models.py","text":"<pre><code>class Order(models.Model):\n    \"\"\"Order model\"\"\"\n\n    order_no = models.CharField(max_length=150)\n    user = models.ForeignKey(\"auth.User\", on_delete=models.CASCADE)\n    is_finished = models.BooleanField(default=False)\n\n    def __str__(self):\n        return f\"id: {self.id}\"\n\n    class Meta:\n        verbose_name = \"Order\"\n        verbose_name_plural = \"Orders\"\n</code></pre>"},{"location":"check_order/#checkorder","title":"CheckOrder","text":"<p>Ushbu qismda payme dan kelayotgan malumotlar tekshiriladi, account ni ichida kelayotgan order_id ni ishlatgan holda, database dan ushbu order ni statusini qaytaramiz</p>"},{"location":"check_order/#viewspy","title":"views.py","text":"<p><pre><code>from paycomuz.views import MerchantAPIView\nfrom paycomuz import Paycom\nfrom django.urls import path\n\nclass CheckOrder(Paycom):\n    def check_order(self, amount: int, account: dict, *args, **kwargs):\n        order = Order.objects.filter(order_no=account[\"order_id\"], is_finished=False).first()\n\n        if not order:\n            return self.ORDER_NOT_FOND\n        if order.product.price * 100 != amount:\n            return self.INVALID_AMOUNT\n\n        return self.ORDER_FOUND\n\n   def successfully_payment(self, account: dict, transaction, *args, **kwargs):\n        order = Order.objects.filter(order_no=transaction.order_key).first()\n\n        if not order:\n            return self.ORDER_NOT_FOND\n\n        order.is_finished = True\n        order.save()\n\n   def cancel_payment(self, account, transaction, *args, **kwargs):\n        print(account)\n\n\nclass TestView(MerchantAPIView):\n    VALIDATE_CLASS = CheckOrder\n</code></pre> Payment successful bo'lgan holatda, is_finished = True ga o'zgartirib qo'yildi.</p> <p>Payme status_code larini, ushbu havola orqali tanishib chiqishingiz mumkin: https://developer.help.paycom.uz/metody-merchant-api/oshibki-errors/</p>"},{"location":"check_order/#urlspy","title":"urls.py","text":"<pre><code>from django.urls import path\n\nurlpatterns = [\n    path('payme/', TestView.as_view())\n]\n</code></pre> <p>Endi bularning hammasini test qilish uchun, payme ning sandbox platformasi orqali tekshirishingiz kerak bo'ladi: https://test.paycom.uz/instruction</p>"},{"location":"generate_url/","title":"Url yaratish","text":"<p>Payme ning to'lov qismiga foydalanuvchini yuborish uchun, URL ni yaratib olishimiz kerak bo'ladi</p> <p>Namuna </p> <p><pre><code>from paycomuz import Paycom\n\npaycom = Paycom()\n\nurl = paycom.create_initialization(amount=100000, order_id='123456789', return_url='https://example.com/success/')\nprint(url)\n</code></pre> Amountni berayotganimizda, summani ohiriga ikkta 0 qo'yishimiz kerak bo'ladi, chunki Payme kelayotgan summani tiyinda hisoblaydi.</p>"},{"location":"getting_started/","title":"Ishni boshlash","text":"<p>Kerakli modullarni o'rnatib olganimizdan so'ng, keling ishni boshlasak. Avval <code>settings.py</code> ga o'tib, quyidagi ma'lumotlarni kiritib olamiz</p>"},{"location":"getting_started/#settingspy","title":"settings.py","text":"<pre><code>PAYCOM_SETTINGS = {\n    \"KASSA_ID\": \"KASSA_ID\",  # token\n    \"SECRET_KEY\": \"TEST_KEY OR PRODUCTION_KEY\",  # password\n    \"ACCOUNTS\": {\n        \"KEY\": \"order_id\"\n    }\n}\n\nINSTALLED_APPS = [\n    'rest_framework',\n    'paycomuz',\n    ...\n]\n</code></pre> <p><code>KASSA_ID</code> va <code>SECRET_KEY</code> ma'lumotlarini Payme hodimlari taqdim etishadi</p> <p>Va undan so'ng database ni migrate qilib olamiz <pre><code>python manage.py migrate\n</code></pre></p> <p>Payme userini yaratib olamiz, bu Payme dan kelayotgan requestlarni authorize qilish uchun kerak bo'ladi <pre><code>python manage.py create_paycom_user\n</code></pre></p>"}]}